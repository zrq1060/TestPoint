plugins {
    alias(libs.plugins.androidLibrary)
    alias(libs.plugins.kotlinAndroid)
    alias(libs.plugins.ksp)
}

ksp {
    arg("TEST_MODULE_NAME", project.getName())
}

android {
    namespace 'com.zrq.test.point.demo.java'
    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [TEST_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility libs.versions.javaVersion.get().toString()
        targetCompatibility libs.versions.javaVersion.get().toString()
    }
    kotlinOptions {
        jvmTarget = libs.versions.javaVersion.get().toString()
    }
}

dependencies {
    implementation libs.appcompat

    testImplementation libs.junit
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.espresso.core
    // test point
    if (isDependenciesLocalProject.toBoolean()) {
        implementation project(':test-point-annotation')
        debugImplementation project(':test-point-api')
        if (isUseKsp.toBoolean()) kspDebug project(':test-point-ksp') else debugAnnotationProcessor project(':test-point-compiler')
    } else {
        implementation libs.test.point.annotation
        debugImplementation libs.test.point.api
        if (isUseKsp.toBoolean()) kspDebug libs.test.point.ksp else debugAnnotationProcessor libs.test.point.compiler
    }
}